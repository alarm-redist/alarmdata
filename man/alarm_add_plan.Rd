% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/add_plan.R
\name{alarm_add_plan}
\alias{alarm_add_plan}
\title{Add a reference plan to a set of plans}
\usage{
alarm_add_plan(
  plans,
  ref_plan,
  map = NULL,
  name = NULL,
  calc_polsby = FALSE,
  GEOID = "GEOID"
)
}
\arguments{
\item{plans}{A \code{redist_plans} object.}

\item{ref_plan}{An integer vector containing the reference plan or a block assignment file as a \code{tibble} or \code{data.frame}.}

\item{map}{A \code{redist_map} object. Only required if the \code{redist_plans} object includes summary statistics.}

\item{name}{A human-readable name for the reference plan. Defaults to the name of \code{ref_plan}. If \code{ref_plan} is a
\code{tibble} or \code{data.frame}, it should be the name of the column of \code{ref_plan} that identifies districts.}

\item{calc_polsby}{A logical value indicating whether a Polsby-Popper compactness score should be calculated for the reference plan. Defaults to \code{FALSE}.}

\item{GEOID}{character. Ignored unless \code{ref_plan} is a \code{tibble} or \code{data.frame}.
Should correspond to the column of \code{ref_plan} that identifies block \code{GEOID}s.
Default is \code{'GEOID'}.}
}
\value{
A modified \code{redist_plans} object containing the reference plan. Includes summary statistics if the original \code{redist_plans} object had them as well.
}
\description{
Facilitates comparing an existing (i.e., non-simulated) redistricting plan to a set of simulated plans.
}
\examples{
map <- alarm_50state_map("WY")
pl <- alarm_50state_plans("WY")
alarm_add_plan(c(1), pl, map, name = "example")

\dontrun{
# requires stable connection to the Harvard Dataverse
# download and load a comparison plan
url <- "https://www.redistrict2020.org/files/NM-2021-10/Congressional_Concept_A.zip"
tf <- tempfile(fileext = ".zip")
utils::download.file(url, tf)
utils::unzip(tf, exdir = dirname(tf))
baf <- readr::read_csv(file = paste0(dirname(tf), "/Congressional Concept A.csv"),
                       col_types = "ci")
names(baf) <- c("GEOID", "concept_a")
# Add it to the plans object
map_nm <- alarm_50state_map("NM")
plans_nm <- alarm_50state_plans("NM", stats = FALSE)
alarm_add_plan(baf, plans_nm, map = map_nm, name = "concept_a")
}

}
