[{"path":"https://alarm-redist.github.io/alarmdata/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ALARM Project Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Cory McCartan. Author, maintainer. Christopher T. Kenny. Author. Tyler Simko. Author. Michael Zhao. Author. Kosuke Imai. Author.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"McCartan C, Kenny C, Simko T, Zhao M, Imai K (2022). alarmdata: Download, Merge, Process Redistricting Data. R package version 0.0.0.9000, https://alarm-redist.github.io/alarmdata/.","code":"@Manual{,   title = {alarmdata: Download, Merge, and Process Redistricting Data},   author = {Cory McCartan and Christopher T. Kenny and Tyler Simko and Michael Zhao and Kosuke Imai},   year = {2022},   note = {R package version 0.0.0.9000},   url = {https://alarm-redist.github.io/alarmdata/}, }"},{"path":"https://alarm-redist.github.io/alarmdata/index.html","id":"alarmdata-","dir":"","previous_headings":"","what":"Download, Merge, and Process Redistricting Data","title":"Download, Merge, and Process Redistricting Data","text":"alarmdata provides utility functions download process data produced ALARM Project, including 2020 redistricting files 50-State Redistricting Simulations.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download, Merge, and Process Redistricting Data","text":"can install development version alarmdata GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"alarm-redist/alarmdata\")"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_50state.html","id":null,"dir":"Reference","previous_headings":"","what":"Download maps and plans from the 50-State Simulation Project — alarm_50state","title":"Download maps and plans from the 50-State Simulation Project — alarm_50state","text":"functions download redist_map redist_plans objects 50-State Simulation Project ALARM Project's Dataverse. alarm_50state_doc() download documentation particular state show browser. alarm_50state_stats download just summary statistics state.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_50state.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download maps and plans from the 50-State Simulation Project — alarm_50state","text":"","code":"alarm_50state_map(state, year = 2020)  alarm_50state_plans(state, stats = TRUE, year = 2020)  alarm_50state_stats(state, year = 2020)  alarm_50state_doc(state, year = 2020)"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_50state.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download maps and plans from the 50-State Simulation Project — alarm_50state","text":"state state name, abbreviation, FIPS code, ANSI code. year redistricting cycle download. Currently \"2020\" available. stats TRUE (default), download summary statistics plan.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_50state.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download maps and plans from the 50-State Simulation Project — alarm_50state","text":"alarm_50state_map(), redist_map. alarm_50state_plans(), redist_plans. alarm_50state_doc(), nothing (load HTML file viewer web browser). alarm_50state_stats(), tibble.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_50state.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Download maps and plans from the 50-State Simulation Project — alarm_50state","text":"Every decade following Census, states municipalities must redraw districts Congress, state houses, city councils, . goal 50-State Simulation Project enable researchers, practitioners, general public use cutting-edge redistricting simulation analysis evaluate enacted congressional districts. Evaluating redistricting plan requires analysts take account state’s redistricting rules particular political geography. Comparing partisan bias plan Texas bias plan New York, example, likely misleading. Comparing state’s current plan past plan also problematic demographic political changes time. Redistricting simulations generate ensemble alternative redistricting plans within given state tailored redistricting rules. Unlike traditional evaluation methods, therefore, simulations able directly account state’s political geography redistricting criteria.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_50state.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download maps and plans from the 50-State Simulation Project — alarm_50state","text":"","code":"if (FALSE) { # requires stable connection to the Harvard Dataverse alarm_50state_map(\"WA\") alarm_50state_plans(\"WA\", stats=FALSE) alarm_50states_stats('WA') alarm_50state_doc(\"WA\") }  alarm_50state_plans('WY') #> An earlier bug incorrectly in redist doubled the number of removed edges. #> Current counts are correct. #> This message is displayed once per session. #> redist 4.0.0 aligned pro-Republican biases as positive numbers, reversing the #> old Efficiency Gap direction. #> This message is displayed once per session. #> A <redist_plans> containing 5000 sampled plans and 1 reference plan #> Plans have 1 districts from a 1-unit map, and were drawn using an unknown #> algorithm. #> Plans matrix: int [1, 1:5001] 1 1 1 1 1 1 1 1 1 1 ... #> # A tibble: 5,001 × 49 #>    draw  distr…¹ total…² total…³ plan_…⁴ comp_…⁵ comp_…⁶ pop_h…⁷ pop_w…⁸ pop_b…⁹ #>    <fct>   <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 cd_2…       1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  2 1           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  3 2           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  4 3           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  5 4           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  6 5           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  7 6           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  8 7           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  9 8           1  576851  441337       0     NaN   0.772   59046  469664    4735 #> 10 9           1  576851  441337       0     NaN   0.772   59046  469664    4735 #> # … with 4,991 more rows, 39 more variables: pop_aian <dbl>, pop_asian <dbl>, #> #   pop_nhpi <dbl>, pop_other <dbl>, pop_two <dbl>, vap_hisp <dbl>, #> #   vap_white <dbl>, vap_black <dbl>, vap_aian <dbl>, vap_asian <dbl>, #> #   vap_nhpi <dbl>, vap_other <dbl>, vap_two <dbl>, pre_16_rep_tru <dbl>, #> #   pre_16_dem_cli <dbl>, uss_18_rep_bar <dbl>, uss_18_dem_tra <dbl>, #> #   gov_18_rep_gor <dbl>, gov_18_dem_thr <dbl>, sos_18_rep_buc <dbl>, #> #   sos_18_dem_byr <dbl>, pre_20_rep_tru <dbl>, pre_20_dem_bid <dbl>, … #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names alarm_50state_stats(\"WY\") #> # A tibble: 5,001 × 49 #>    draw  distr…¹ total…² total…³ plan_…⁴ comp_…⁵ comp_…⁶ pop_h…⁷ pop_w…⁸ pop_b…⁹ #>    <fct>   <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 cd_2…       1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  2 1           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  3 2           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  4 3           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  5 4           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  6 5           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  7 6           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  8 7           1  576851  441337       0     NaN   0.772   59046  469664    4735 #>  9 8           1  576851  441337       0     NaN   0.772   59046  469664    4735 #> 10 9           1  576851  441337       0     NaN   0.772   59046  469664    4735 #> # … with 4,991 more rows, 39 more variables: pop_aian <dbl>, pop_asian <dbl>, #> #   pop_nhpi <dbl>, pop_other <dbl>, pop_two <dbl>, vap_hisp <dbl>, #> #   vap_white <dbl>, vap_black <dbl>, vap_aian <dbl>, vap_asian <dbl>, #> #   vap_nhpi <dbl>, vap_other <dbl>, vap_two <dbl>, pre_16_rep_tru <dbl>, #> #   pre_16_dem_cli <dbl>, uss_18_rep_bar <dbl>, uss_18_dem_tra <dbl>, #> #   gov_18_rep_gor <dbl>, gov_18_dem_thr <dbl>, sos_18_rep_buc <dbl>, #> #   sos_18_dem_byr <dbl>, pre_20_rep_tru <dbl>, pre_20_dem_bid <dbl>, … #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_add_plan.html","id":null,"dir":"Reference","previous_headings":"","what":"Add a reference plan to a set of plans — alarm_add_plan","title":"Add a reference plan to a set of plans — alarm_add_plan","text":"Facilitates comparing existing (.e., non-simulated) redistricting plan set simulated plans.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_add_plan.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add a reference plan to a set of plans — alarm_add_plan","text":"","code":"alarm_add_plan(   ref_plan,   plans,   map = NULL,   calc_polsby = FALSE,   name = NULL,   GEOID = \"GEOID\" )"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_add_plan.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add a reference plan to a set of plans — alarm_add_plan","text":"ref_plan integer vector containing reference plan block assignment file tibble data.frame. plans redist_plans object. map redist_map object. required redist_plans object includes summary statistics. calc_polsby logical value indicating whether Polsby-Popper compactness score calculated reference plan. Defaults FALSE. name human-readable name reference plan. Defaults name ref_plan. ref_plan tibble data.frame, name column ref_plan identifies districts. GEOID character. Ignored unless ref_plan tibble data.frame. correspond column ref_plan identifies block GEOIDs. Default 'GEOID'.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_add_plan.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add a reference plan to a set of plans — alarm_add_plan","text":"modified redist_plans object containing reference plan. Includes summary statistics original redist_plans object well.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_add_plan.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add a reference plan to a set of plans — alarm_add_plan","text":"","code":"map <- alarm_50state_map('WY') #>    |                                                                               |                                                                      |   0%   |                                                                               |                                                                      |   1%   |                                                                               |=                                                                     |   1%   |                                                                               |=                                                                     |   2%   |                                                                               |==                                                                    |   3%   |                                                                               |====                                                                  |   6%   |                                                                               |======                                                                |   9%   |                                                                               |=======                                                               |   9%   |                                                                               |=============                                                         |  19%   |                                                                               |=============================                                         |  41%   |                                                                               |===============================                                       |  44%   |                                                                               |==========================================================            |  83%   |                                                                               |======================================================================| 100% pl <- alarm_50state_plans('WY') alarm_add_plan(c(1), pl, map, name = 'example') #> A <redist_plans> containing 5000 sampled plans and 2 reference plans #> Plans have 1 districts from a 1-unit map, and were drawn using an unknown #> algorithm. #> Plans matrix: int [1, 1:5002] 1 1 1 1 1 1 1 1 1 1 ... #> # A tibble: 5,002 × 50 #>    chain draw    distr…¹ total…² total…³ plan_…⁴ comp_…⁵ comp_…⁶ pop_h…⁷ pop_w…⁸ #>    <int> <chr>     <int>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1     1 example       1  576851  441337       0     NaN  NA       59046  469664 #>  2     2 cd_2020       1  576851  441337       0     NaN   0.772   59046  469664 #>  3     2 1             1  576851  441337       0     NaN   0.772   59046  469664 #>  4     2 2             1  576851  441337       0     NaN   0.772   59046  469664 #>  5     2 3             1  576851  441337       0     NaN   0.772   59046  469664 #>  6     2 4             1  576851  441337       0     NaN   0.772   59046  469664 #>  7     2 5             1  576851  441337       0     NaN   0.772   59046  469664 #>  8     2 6             1  576851  441337       0     NaN   0.772   59046  469664 #>  9     2 7             1  576851  441337       0     NaN   0.772   59046  469664 #> 10     2 8             1  576851  441337       0     NaN   0.772   59046  469664 #> # … with 4,992 more rows, 40 more variables: pop_black <dbl>, pop_aian <dbl>, #> #   pop_asian <dbl>, pop_nhpi <dbl>, pop_other <dbl>, pop_two <dbl>, #> #   vap_hisp <dbl>, vap_white <dbl>, vap_black <dbl>, vap_aian <dbl>, #> #   vap_asian <dbl>, vap_nhpi <dbl>, vap_other <dbl>, vap_two <dbl>, #> #   pre_16_rep_tru <dbl>, pre_16_dem_cli <dbl>, uss_18_rep_bar <dbl>, #> #   uss_18_dem_tra <dbl>, gov_18_rep_gor <dbl>, gov_18_dem_thr <dbl>, #> #   sos_18_rep_buc <dbl>, sos_18_dem_byr <dbl>, pre_20_rep_tru <dbl>, … #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names  if (FALSE) { # requires stable connection to the Harvard Dataverse  url <- 'https://www.redistrict2020.org/files/NM-2021-10/Congressional_Concept_A.zip'  tf <- tempfile(fileext = '.zip')  utils::download.file(url, tf)  utils::unzip(tf, exdir = dirname(tf))  baf <- readr::read_csv(file = paste0(dirname(tf), '/Congressional Concept A.csv'),                         col_types = 'ci')  names(baf) <- c('GEOID', 'concept_a')  map_nm <- alarm_50state_map('NM')  alarm_add_plan(baf, alarm_50state_plans('NM', stats = FALSE), map = map_nm, name = 'concept_a') }"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_census_vest.html","id":null,"dir":"Reference","previous_headings":"","what":"Download Joined VEST and Census Data — alarm_census_vest","title":"Download Joined VEST and Census Data — alarm_census_vest","text":"Downloads Census data joined VEST's election data. re-tabulated precincts collected VEST 2020 Census geographies.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_census_vest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download Joined VEST and Census Data — alarm_census_vest","text":"","code":"alarm_census_vest(state, geometry = FALSE, epsg = alarm_epsg(state))"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_census_vest.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download Joined VEST and Census Data — alarm_census_vest","text":"state state name, abbreviation, FIPS code, ANSI code. geometry TRUE (default), include sf geometry tigris data. epsg numeric EPSG code use coordinate system. Default alarm_epsg(state).","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_census_vest.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download Joined VEST and Census Data — alarm_census_vest","text":"tibble Census election data","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_census_vest.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download Joined VEST and Census Data — alarm_census_vest","text":"","code":"alarm_census_vest('DE', geometry = FALSE) #> # A tibble: 412 × 44 #>    GEOID20     state county  vtd     pop pop_h…¹ pop_w…² pop_b…³ pop_a…⁴ pop_a…⁵ #>    <chr>       <chr> <chr>   <chr> <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl> #>  1 10001001-28 DE    Kent C… 001-…  2203     209     749    1080      14      16 #>  2 10001001-29 DE    Kent C… 001-… 11966     651    7465    2933      46     188 #>  3 10001001-30 DE    Kent C… 001-…  5543     300    3878     911      15      71 #>  4 10001001-31 DE    Kent C… 001-…   537      20     417      76       2       8 #>  5 10001001-32 DE    Kent C… 001-…  6420     958    2182    2570      42     218 #>  6 10001001-33 DE    Kent C… 001-…   866      68     510     204       7       9 #>  7 10001001-34 DE    Kent C… 001-…   464      53     195     130       1      52 #>  8 10001002-28 DE    Kent C… 002-…  4366     322    2697    1007       5      45 #>  9 10001002-29 DE    Kent C… 002-…  8882     647    4801    2561     121     209 #> 10 10001002-30 DE    Kent C… 002-…   604      27     446      85       6       3 #> # … with 402 more rows, 34 more variables: pop_nhpi <dbl>, pop_other <dbl>, #> #   pop_two <dbl>, vap <dbl>, vap_hisp <dbl>, vap_white <dbl>, vap_black <dbl>, #> #   vap_aian <dbl>, vap_asian <dbl>, vap_nhpi <dbl>, vap_other <dbl>, #> #   vap_two <dbl>, pre_16_dem_cli <dbl>, pre_16_rep_tru <dbl>, #> #   gov_16_dem_car <dbl>, gov_16_rep_bon <dbl>, uss_18_dem_car <dbl>, #> #   uss_18_rep_arl <dbl>, atg_18_dem_jen <dbl>, atg_18_rep_pep <dbl>, #> #   pre_20_dem_bid <dbl>, pre_20_rep_tru <dbl>, uss_20_dem_coo <dbl>, … #> # ℹ Use `print(n = ...)` to see more rows, and `colnames()` to see all variable names"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_epsg.html","id":null,"dir":"Reference","previous_headings":"","what":"Suggested EPSG Codes — alarm_epsg","title":"Suggested EPSG Codes — alarm_epsg","text":"Provides suggested EPSG codes 50 states. One NAD83 (HARN) coordinate systems state.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_epsg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Suggested EPSG Codes — alarm_epsg","text":"","code":"alarm_epsg(state)"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_epsg.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Suggested EPSG Codes — alarm_epsg","text":"state state name, abbreviation, FIPS code, ANSI code.","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_epsg.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Suggested EPSG Codes — alarm_epsg","text":"numeric EPSG code","code":""},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarm_epsg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Suggested EPSG Codes — alarm_epsg","text":"","code":"alarm_epsg('NY') #> [1] 2829"},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarmdata-package.html","id":null,"dir":"Reference","previous_headings":"","what":"alarmdata: Download, Merge, and Process Redistricting Data — alarmdata-package","title":"alarmdata: Download, Merge, and Process Redistricting Data — alarmdata-package","text":"Utility functions download process data produced ALARM Project, including 2020 redistricting files https://alarm-redist.github.io/posts/2021-08-10-census-2020/ 50-State Redistricting Simulations doi:10.7910/DVN/SLCD3E . package extends functionality introduced arXiv:2206.10763 cover states single district.","code":""},{"path":[]},{"path":"https://alarm-redist.github.io/alarmdata/reference/alarmdata-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"alarmdata: Download, Merge, and Process Redistricting Data — alarmdata-package","text":"Maintainer: Cory McCartan cmccartan@g.harvard.edu (ORCID) Authors: Christopher T. Kenny christopherkenny@fas.harvard.edu (ORCID) Tyler Simko tsimko@g.harvard.edu Michael Zhao michaelzhao@college.harvard.edu (ORCID) Kosuke Imai imai@harvard.edu","code":""}]
